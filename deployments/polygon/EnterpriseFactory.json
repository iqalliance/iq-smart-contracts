{
  "address": "0x908AC335219D13276D31Fa68449f7f63B1731BA6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "enterpriseImpl",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "powerTokenImpl",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "stakeTokenImpl",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "rentalTokenImpl",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "enterpriseToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseUri",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "deployed",
          "type": "address"
        }
      ],
      "name": "EnterpriseDeployed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "contract IERC20Metadata",
          "name": "enterpriseToken",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "baseUri",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "gcFeePercent",
          "type": "uint16"
        },
        {
          "internalType": "contract IConverter",
          "name": "converter",
          "type": "address"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "contract IEnterprise",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ProxyAdmin",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "deployService",
      "outputs": [
        {
          "internalType": "contract IPowerToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEnterpriseImpl",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPowerTokenImpl",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRentalTokenImpl",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakeTokenImpl",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2127ef502279af6bee1d52ee34240707d3001784ac96c35fcace6e7260b6a1ac",
  "receipt": {
    "to": null,
    "from": "0x79a50D90035FE6B1Cb2D77a4146a60B249163222",
    "contractAddress": "0x908AC335219D13276D31Fa68449f7f63B1731BA6",
    "transactionIndex": 47,
    "gasUsed": "1927230",
    "logsBloom": "0x
    "blockHash": "0x5cfa94b8250d56f9b1ce0170b226e4135f234265154c19968c50c6abb98dbc47",
    "transactionHash": "0x2127ef502279af6bee1d52ee34240707d3001784ac96c35fcace6e7260b6a1ac",
    "logs": [
      {
        "transactionIndex": 47,
        "blockNumber": 23185474,
        "transactionHash": "0x2127ef502279af6bee1d52ee34240707d3001784ac96c35fcace6e7260b6a1ac",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000079a50d90035fe6b1cb2d77a4146a60b249163222",
          "0x0000000000000000000000007b5000af8ab69fd59eb0d4f5762bff57c9c04385"
        ],
        "data": "0x000000000000000000000000000000000000000000000000020184691a492400000000000000000000000000000000000000000000000000112ed8e604519c0000000000000000000000000000000000000000000000129e8aa8e46d258f8a870000000000000000000000000000000000000000000000000f2d547cea08780000000000000000000000000000000000000000000000129e8caa68d63fd8ae87",
        "logIndex": 266,
        "blockHash": "0x5cfa94b8250d56f9b1ce0170b226e4135f234265154c19968c50c6abb98dbc47"
      }
    ],
    "blockNumber": 23185474,
    "cumulativeGasUsed": "11253284",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4ba78695845eb5e0a02cee3b51ffa214996032ce",
    "0xcEeef2a276109DE31750519405fBaF66A5938A3E",
    "0x27cdca6265B971D1aF8E46164F6E5494997dC449",
    "0x7eB8D59514747e1d8A42519Ec08EbaB91cB8E1F2"
  ],
  "solcInputHash": "5e018f48b123dc45d051a4423ead5851",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enterpriseImpl\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"powerTokenImpl\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakeTokenImpl\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rentalTokenImpl\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enterpriseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"deployed\",\"type\":\"address\"}],\"name\":\"EnterpriseDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"enterpriseToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"gcFeePercent\",\"type\":\"uint16\"},{\"internalType\":\"contract IConverter\",\"name\":\"converter\",\"type\":\"address\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"contract IEnterprise\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ProxyAdmin\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"deployService\",\"outputs\":[{\"internalType\":\"contract IPowerToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEnterpriseImpl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPowerTokenImpl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRentalTokenImpl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeTokenImpl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EnterpriseFactory.sol\":\"EnterpriseFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xca2eb23a188f213d914fad982985d07e491dbc9960a387d4469bfce5c48911b1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallSecure(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        address oldImplementation = _getImplementation();\\n\\n        // Initial upgrade and setup call\\n        _setImplementation(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n\\n        // Perform rollback test if not already in progress\\n        StorageSlot.BooleanSlot storage rollbackTesting = StorageSlot.getBooleanSlot(_ROLLBACK_SLOT);\\n        if (!rollbackTesting.value) {\\n            // Trigger rollback using upgradeTo from the new implementation\\n            rollbackTesting.value = true;\\n            Address.functionDelegateCall(\\n                newImplementation,\\n                abi.encodeWithSignature(\\\"upgradeTo(address)\\\", oldImplementation)\\n            );\\n            rollbackTesting.value = false;\\n            // Check rollback was effective\\n            require(oldImplementation == _getImplementation(), \\\"ERC1967Upgrade: upgrade breaks further upgrades\\\");\\n            // Finally reset to the new implementation and log the upgrade\\n            _upgradeTo(newImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcbccf806d646bd9e2594650917208245d45998b887d5fc914de424247f5f9f9d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0x8ddea9f930f26e588ea606f44c90d2623560c908e38614a03a4ca78aea8f9202\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x5615339d191e77be7e46319b67856f9355786f705b7b3c4a7237ab70c1864ab1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./TransparentUpgradeableProxy.sol\\\";\\nimport \\\"../../access/Ownable.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract ProxyAdmin is Ownable {\\n    /**\\n     * @dev Returns the current implementation of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyImplementation(TransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"implementation()\\\")) == 0x5c60da1b\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"5c60da1b\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Returns the current admin of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyAdmin(TransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"admin()\\\")) == 0xf851a440\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"f851a440\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Changes the admin of `proxy` to `newAdmin`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the current admin of `proxy`.\\n     */\\n    function changeProxyAdmin(TransparentUpgradeableProxy proxy, address newAdmin) public virtual onlyOwner {\\n        proxy.changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgrade(TransparentUpgradeableProxy proxy, address implementation) public virtual onlyOwner {\\n        proxy.upgradeTo(implementation);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\\n     * {TransparentUpgradeableProxy-upgradeToAndCall}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgradeAndCall(\\n        TransparentUpgradeableProxy proxy,\\n        address implementation,\\n        bytes memory data\\n    ) public payable virtual onlyOwner {\\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\\n    }\\n}\\n\",\"keccak256\":\"0x8f1503ee5d495997d1bd9675f432e74a299d34c87bdc38647dcc554e76591b41\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0x2bf89a0dae89f861c5e8013478e650e918d98d376e75393867ccec88b0bf2b90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xa69205e5009601cf13be78b1e2f500e1e3b1d8012f22d966e63975273f602038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5d15d280d1f868f59a8264dc73f7ea8c51f10d78aac864b2f2ad29412d187ff5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/EnterpriseFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// IQ Protocol. Risk-free collateral-less utility renting\\n// https://iq.space/docs/iq-yellow-paper.pdf\\n// (C) Blockvis & PARSIQ\\n// \\ud83d\\udd96 Stake strong!\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\\\";\\nimport \\\"./interfaces/IConverter.sol\\\";\\nimport \\\"./interfaces/IEnterprise.sol\\\";\\nimport \\\"./interfaces/IStakeToken.sol\\\";\\nimport \\\"./interfaces/IRentalToken.sol\\\";\\nimport \\\"./interfaces/IPowerToken.sol\\\";\\nimport \\\"./libs/Errors.sol\\\";\\n\\ncontract EnterpriseFactory {\\n    event EnterpriseDeployed(\\n        address indexed creator,\\n        address indexed enterpriseToken,\\n        string name,\\n        string baseUri,\\n        address deployed\\n    );\\n\\n    address private immutable _enterpriseImpl;\\n    address private immutable _powerTokenImpl;\\n    address private immutable _stakeTokenImpl;\\n    address private immutable _rentalTokenImpl;\\n\\n    constructor(\\n        address enterpriseImpl,\\n        address powerTokenImpl,\\n        address stakeTokenImpl,\\n        address rentalTokenImpl\\n    ) {\\n        require(enterpriseImpl != address(0), Errors.EF_INVALID_ENTERPRISE_IMPLEMENTATION_ADDRESS);\\n        require(powerTokenImpl != address(0), Errors.EF_INVALID_POWER_TOKEN_IMPLEMENTATION_ADDRESS);\\n        require(stakeTokenImpl != address(0), Errors.EF_INVALID_STAKE_TOKEN_IMPLEMENTATION_ADDRESS);\\n        require(rentalTokenImpl != address(0), Errors.EF_INVALID_RENTAL_TOKEN_IMPLEMENTATION_ADDRESS);\\n        _enterpriseImpl = enterpriseImpl;\\n        _powerTokenImpl = powerTokenImpl;\\n        _stakeTokenImpl = stakeTokenImpl;\\n        _rentalTokenImpl = rentalTokenImpl;\\n    }\\n\\n    function deploy(\\n        string calldata name,\\n        IERC20Metadata enterpriseToken,\\n        string calldata baseUri,\\n        uint16 gcFeePercent,\\n        IConverter converter\\n    ) external returns (IEnterprise) {\\n        ProxyAdmin proxyAdmin = new ProxyAdmin();\\n\\n        IEnterprise enterprise = IEnterprise(deployProxy(_enterpriseImpl, proxyAdmin));\\n        proxyAdmin.transferOwnership(address(enterprise));\\n        {\\n            enterprise.initialize(name, baseUri, gcFeePercent, converter, proxyAdmin, msg.sender);\\n        }\\n        {\\n            IStakeToken stakeToken = _deployStakeToken(enterpriseToken.symbol(), enterprise, proxyAdmin);\\n            IRentalToken rentalToken = _deployRentalToken(enterpriseToken.symbol(), enterprise, proxyAdmin);\\n            enterprise.initializeTokens(enterpriseToken, stakeToken, rentalToken);\\n        }\\n\\n        emit EnterpriseDeployed(msg.sender, address(enterpriseToken), name, baseUri, address(enterprise));\\n\\n        return enterprise;\\n    }\\n\\n    function deployProxy(address implementation, ProxyAdmin admin) internal returns (address) {\\n        return address(new TransparentUpgradeableProxy(implementation, address(admin), \\\"\\\"));\\n    }\\n\\n    function deployService(ProxyAdmin admin) external returns (IPowerToken) {\\n        return IPowerToken(deployProxy(_powerTokenImpl, admin));\\n    }\\n\\n    function _deployStakeToken(\\n        string memory symbol,\\n        IEnterprise enterprise,\\n        ProxyAdmin proxyAdmin\\n    ) internal returns (IStakeToken) {\\n        string memory stakeTokenName = string(abi.encodePacked(\\\"Staking \\\", symbol));\\n        string memory stakeTokenSymbol = string(abi.encodePacked(\\\"s\\\", symbol));\\n\\n        IStakeToken stakeToken = IStakeToken(deployProxy(_stakeTokenImpl, proxyAdmin));\\n        stakeToken.initialize(stakeTokenName, stakeTokenSymbol, enterprise);\\n        return stakeToken;\\n    }\\n\\n    function _deployRentalToken(\\n        string memory symbol,\\n        IEnterprise enterprise,\\n        ProxyAdmin proxyAdmin\\n    ) internal returns (IRentalToken) {\\n        string memory rentalTokenName = string(abi.encodePacked(\\\"Rental \\\", symbol));\\n        string memory rentalTokenSymbol = string(abi.encodePacked(\\\"r\\\", symbol));\\n\\n        IRentalToken rentalToken = IRentalToken(deployProxy(_rentalTokenImpl, proxyAdmin));\\n        rentalToken.initialize(rentalTokenName, rentalTokenSymbol, enterprise);\\n        return rentalToken;\\n    }\\n\\n    function getEnterpriseImpl() external view returns (address) {\\n        return _enterpriseImpl;\\n    }\\n\\n    function getPowerTokenImpl() external view returns (address) {\\n        return _powerTokenImpl;\\n    }\\n\\n    function getStakeTokenImpl() external view returns (address) {\\n        return _stakeTokenImpl;\\n    }\\n\\n    function getRentalTokenImpl() external view returns (address) {\\n        return _rentalTokenImpl;\\n    }\\n}\\n\",\"keccak256\":\"0x506fa52246fc6e882fdab658f5903b7aeaf350b09248a6e9822c06bb3f01a1b3\",\"license\":\"MIT\"},\"contracts/interfaces/IConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * Currency converter interface.\\n */\\ninterface IConverter {\\n    /**\\n     * After calling this function it is expected that requested currency will be\\n     * transferred to the msg.sender automatically\\n     */\\n    function convert(\\n        IERC20 source,\\n        uint256 amount,\\n        IERC20 target\\n    ) external returns (uint256);\\n\\n    /**\\n     * Estimates conversion of `source` currency into `target` currency\\n     */\\n    function estimateConvert(\\n        IERC20 source,\\n        uint256 amount,\\n        IERC20 target\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x0e075a73c6ca8315b71dbf1f7baaff51da647cb35138b6103fe8837b86740c27\",\"license\":\"MIT\"},\"contracts/interfaces/IEnterprise.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"./IEnterpriseStorage.sol\\\";\\n\\ninterface IEnterprise is IEnterpriseStorage {\\n    function transferRental(\\n        address from,\\n        address to,\\n        uint256 rentalTokenId\\n    ) external;\\n}\\n\",\"keccak256\":\"0x9ec90576b137d6a26578a2a4883deb8ea27d0b284b2b068d75ee35e05aa73e36\",\"license\":\"MIT\"},\"contracts/interfaces/IEnterpriseStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\\\";\\nimport \\\"./IInitializableOwnable.sol\\\";\\nimport \\\"./IStakeToken.sol\\\";\\nimport \\\"./IRentalToken.sol\\\";\\nimport \\\"./IConverter.sol\\\";\\n\\ninterface IEnterpriseStorage is IInitializableOwnable {\\n    struct RentalAgreement {\\n        // slot 1, 0 bytes left\\n        uint112 rentalAmount; // 14 bytes\\n        uint16 powerTokenIndex; // 2 bytes\\n        uint32 startTime; // 4 bytes\\n        uint32 endTime; // 4 bytes\\n        uint32 renterOnlyReturnTime; // 4 bytes\\n        uint32 enterpriseOnlyCollectionTime; // 4 bytes\\n        // slot 2, 16 bytes left\\n        uint112 gcRewardAmount; // 14 bytes\\n        uint16 gcRewardTokenIndex; // 2 bytes\\n    }\\n\\n    function initialize(\\n        string memory enterpriseName,\\n        string calldata baseUri,\\n        uint16 gcFeePercent,\\n        IConverter converter,\\n        ProxyAdmin proxyAdmin,\\n        address initialOwner\\n    ) external;\\n\\n    function initializeTokens(\\n        IERC20Metadata enterpriseToken,\\n        IStakeToken stakeToken,\\n        IRentalToken rentalToken\\n    ) external;\\n\\n    function getBaseUri() external view returns (string memory);\\n\\n    function getConverter() external view returns (IConverter);\\n\\n    function getEnterpriseToken() external view returns (IERC20Metadata);\\n\\n    function isSupportedPaymentToken(address token) external view returns (bool);\\n\\n    function getGCFeePercent() external view returns (uint16);\\n\\n    function getAvailableReserve() external view returns (uint256);\\n\\n    function getUsedReserve() external view returns (uint256);\\n\\n    function getReserve() external view returns (uint256);\\n\\n    function getBondingCurve() external view returns (uint256 pole, uint256 slope);\\n\\n    function getRentalAgreement(uint256 rentalTokenId) external view returns (RentalAgreement memory);\\n\\n    function getPaymentToken(uint256 index) external view returns (address);\\n}\\n\",\"keccak256\":\"0xf917640fb8508876ccdab3a8d0b42ea038436fb81e083037bf66bb82e006993b\",\"license\":\"MIT\"},\"contracts/interfaces/IInitializableOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\ninterface IInitializableOwnable {\\n    function owner() external view returns (address);\\n}\\n\",\"keccak256\":\"0x28d4c5419578469a033e07b9550da22ed3a0eda7463bd135dd3bba56c30701cd\",\"license\":\"MIT\"},\"contracts/interfaces/IPowerToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"./IPowerTokenStorage.sol\\\";\\n\\ninterface IPowerToken is IERC20Metadata, IPowerTokenStorage {\\n    function forceTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function mint(address account, uint256 amount) external;\\n\\n    function burnFrom(address account, uint256 amount) external;\\n\\n    function notifyNewRental(uint256 rentalTokenId) external;\\n\\n    function estimateRentalFee(\\n        address paymentToken,\\n        uint112 rentalAmount,\\n        uint32 rentalPeriod\\n    )\\n        external\\n        view\\n        returns (\\n            uint112 poolFee,\\n            uint112 serviceFee,\\n            uint112 gcFee\\n        );\\n}\\n\",\"keccak256\":\"0xf836ff58830bae15a236cf77ab2e46b9b41f7569e927a52fe8c89a45c4a9f5d0\",\"license\":\"MIT\"},\"contracts/interfaces/IPowerTokenStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"./IEnterprise.sol\\\";\\n\\ninterface IPowerTokenStorage {\\n    function initialize(\\n        IEnterprise enterprise,\\n        IERC20Metadata baseToken,\\n        uint112 baseRate,\\n        uint96 minGCFee,\\n        uint16 serviceFeePercent,\\n        uint32 energyGapHalvingPeriod,\\n        uint16 index,\\n        uint32 minRentalPeriod,\\n        uint32 maxRentalPeriod,\\n        bool swappingEnabled\\n    ) external;\\n\\n    function isAllowedRentalPeriod(uint32 period) external view returns (bool);\\n\\n    function getIndex() external view returns (uint16);\\n\\n    function isSwappingEnabled() external view returns (bool);\\n\\n    function isTransferEnabled() external view returns (bool);\\n}\\n\",\"keccak256\":\"0xdc57ad0e9f74c160120eea15a12a84006cdfd1bda164c1a7eb57d4008e7958cb\",\"license\":\"MIT\"},\"contracts/interfaces/IRentalToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"./IRentalTokenStorage.sol\\\";\\n\\ninterface IRentalToken is IERC721, IRentalTokenStorage {\\n    function mint(address to) external returns (uint256);\\n\\n    function burn(uint256 tokenId, address burner) external;\\n\\n    function getNextTokenId() external returns (uint256);\\n}\\n\",\"keccak256\":\"0xc394f847efddf313857ec3ab6cceb02161a68fb09168ee4dbaa0412c5d96d43f\",\"license\":\"MIT\"},\"contracts/interfaces/IRentalTokenStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"./IEnterprise.sol\\\";\\n\\ninterface IRentalTokenStorage {\\n    function initialize(\\n        string memory name,\\n        string memory symbol,\\n        IEnterprise enterprise\\n    ) external;\\n}\\n\",\"keccak256\":\"0xfb389c4b783f0c0a67b1f4928b6af7e7296eb71528f5595c9b24ed5c573166a9\",\"license\":\"MIT\"},\"contracts/interfaces/IStakeToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"./IStakeTokenStorage.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ninterface IStakeToken is IERC721, IStakeTokenStorage {\\n    function mint(address to) external returns (uint256);\\n\\n    function burn(uint256 tokenId) external;\\n\\n    function getNextTokenId() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x34595d47ed22fe44135174d206e634a722fd0d30f076dd8c4ad242942e098c18\",\"license\":\"MIT\"},\"contracts/interfaces/IStakeTokenStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\\\";\\nimport \\\"./IEnterprise.sol\\\";\\n\\ninterface IStakeTokenStorage is IERC721Enumerable {\\n    function initialize(\\n        string memory name,\\n        string memory symbol,\\n        IEnterprise enterprise\\n    ) external;\\n}\\n\",\"keccak256\":\"0x47b6e1c46d190ed7bca13a89511eb69dbcdc5e33b16ff6cda76e128c16520f81\",\"license\":\"MIT\"},\"contracts/libs/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\n/**\\n * @title Errors library\\n * @dev Error messages prefix glossary:\\n *  - EXP = ExpMath\\n *  - ERC20 = ERC20\\n *  - ERC721 = ERC721\\n *  - ERC721META = ERC721Metadata\\n *  - ERC721ENUM = ERC721Enumerable\\n *  - DC = DefaultConverter\\n *  - DE = DefaultEstimator\\n *  - E = Enterprise\\n *  - EO = EnterpriseOwnable\\n *  - ES = EnterpriseStorage\\n *  - IO = InitializableOwnable\\n *  - PT = PowerToken\\n */\\nlibrary Errors {\\n    // common errors\\n    string internal constant NOT_INITIALIZED = \\\"1\\\";\\n    string internal constant ALREADY_INITIALIZED = \\\"2\\\";\\n    string internal constant CALLER_NOT_OWNER = \\\"3\\\";\\n    string internal constant CALLER_NOT_ENTERPRISE = \\\"4\\\";\\n    string internal constant INVALID_ADDRESS = \\\"5\\\";\\n    string internal constant UNREGISTERED_POWER_TOKEN = \\\"6\\\";\\n    string internal constant INVALID_ARRAY_LENGTH = \\\"7\\\";\\n\\n    // contract specific errors\\n    string internal constant EXP_INVALID_PERIOD = \\\"8\\\";\\n\\n    string internal constant ERC20_INVALID_PERIOD = \\\"9\\\";\\n    string internal constant ERC20_TRANSFER_AMOUNT_EXCEEDS_ALLOWANCE = \\\"10\\\";\\n    string internal constant ERC20_DECREASED_ALLOWANCE_BELOW_ZERO = \\\"11\\\";\\n    string internal constant ERC20_TRANSFER_FROM_THE_ZERO_ADDRESS = \\\"12\\\";\\n    string internal constant ERC20_TRANSFER_TO_THE_ZERO_ADDRESS = \\\"13\\\";\\n    string internal constant ERC20_TRANSFER_AMOUNT_EXCEEDS_BALANCE = \\\"14\\\";\\n    string internal constant ERC20_MINT_TO_THE_ZERO_ADDRESS = \\\"15\\\";\\n    string internal constant ERC20_BURN_FROM_THE_ZERO_ADDRESS = \\\"16\\\";\\n    string internal constant ERC20_BURN_AMOUNT_EXCEEDS_BALANCE = \\\"17\\\";\\n    string internal constant ERC20_APPROVE_FROM_THE_ZERO_ADDRESS = \\\"18\\\";\\n    string internal constant ERC20_APPROVE_TO_THE_ZERO_ADDRESS = \\\"19\\\";\\n\\n    string internal constant ERC721_BALANCE_QUERY_FOR_THE_ZERO_ADDRESS = \\\"20\\\";\\n    string internal constant ERC721_OWNER_QUERY_FOR_NONEXISTENT_TOKEN = \\\"21\\\";\\n    string internal constant ERC721_APPROVAL_TO_CURRENT_OWNER = \\\"22\\\";\\n    string internal constant ERC721_APPROVE_CALLER_IS_NOT_OWNER_NOR_APPROVED_FOR_ALL = \\\"23\\\";\\n    string internal constant ERC721_APPROVED_QUERY_FOR_NONEXISTENT_TOKEN = \\\"24\\\";\\n    string internal constant ERC721_APPROVE_TO_CALLER = \\\"25\\\";\\n    string internal constant ERC721_TRANSFER_CALLER_IS_NOT_OWNER_NOR_APPROVED = \\\"26\\\";\\n    string internal constant ERC721_TRANSFER_TO_NON_ERC721RECEIVER_IMPLEMENTER = \\\"27\\\";\\n    string internal constant ERC721_OPERATOR_QUERY_FOR_NONEXISTENT_TOKEN = \\\"28\\\";\\n    string internal constant ERC721_MINT_TO_THE_ZERO_ADDRESS = \\\"29\\\";\\n    string internal constant ERC721_TOKEN_ALREADY_MINTED = \\\"30\\\";\\n    string internal constant ERC721_TRANSFER_OF_TOKEN_THAT_IS_NOT_OWN = \\\"31\\\";\\n    string internal constant ERC721_TRANSFER_TO_THE_ZERO_ADDRESS = \\\"32\\\";\\n\\n    string internal constant ERC721META_URI_QUERY_FOR_NONEXISTENT_TOKEN = \\\"33\\\";\\n\\n    string internal constant ERC721ENUM_OWNER_INDEX_OUT_OF_BOUNDS = \\\"34\\\";\\n    string internal constant ERC721ENUM_GLOBAL_INDEX_OUT_OF_BOUNDS = \\\"35\\\";\\n\\n    string internal constant DC_UNSUPPORTED_PAIR = \\\"36\\\";\\n\\n    string internal constant DE_INVALID_ENTERPRISE_ADDRESS = \\\"37\\\";\\n    string internal constant DE_LABMDA_NOT_GT_0 = \\\"38\\\";\\n\\n    string internal constant E_CALLER_NOT_RENTAL_TOKEN = \\\"39\\\";\\n    string internal constant E_INVALID_BASE_TOKEN_ADDRESS = \\\"40\\\";\\n    string internal constant E_SERVICE_LIMIT_REACHED = \\\"41\\\";\\n    string internal constant E_INVALID_RENTAL_PERIOD_RANGE = \\\"42\\\";\\n    string internal constant E_SERVICE_ENERGY_GAP_HALVING_PERIOD_NOT_GT_0 = \\\"43\\\";\\n    string internal constant E_UNSUPPORTED_PAYMENT_TOKEN = \\\"44\\\";\\n    string internal constant E_RENTAL_PERIOD_OUT_OF_RANGE = \\\"45\\\";\\n    string internal constant E_INSUFFICIENT_LIQUIDITY = \\\"46\\\";\\n    string internal constant E_RENTAL_PAYMENT_SLIPPAGE = \\\"47\\\";\\n    string internal constant E_INVALID_RENTAL_TOKEN_ID = \\\"48\\\";\\n    string internal constant E_INVALID_RENTAL_PERIOD = \\\"49\\\";\\n    string internal constant E_FLASH_LIQUIDITY_REMOVAL = \\\"50\\\";\\n    string internal constant E_SWAPPING_DISABLED = \\\"51\\\";\\n    string internal constant E_RENTAL_TRANSFER_NOT_ALLOWED = \\\"52\\\";\\n    string internal constant E_INVALID_CALLER_WITHIN_RENTER_ONLY_RETURN_PERIOD = \\\"53\\\";\\n    string internal constant E_INVALID_CALLER_WITHIN_ENTERPRISE_ONLY_COLLECTION_PERIOD = \\\"54\\\";\\n\\n    string internal constant EF_INVALID_ENTERPRISE_IMPLEMENTATION_ADDRESS = \\\"55\\\";\\n    string internal constant EF_INVALID_POWER_TOKEN_IMPLEMENTATION_ADDRESS = \\\"56\\\";\\n    string internal constant EF_INVALID_STAKE_TOKEN_IMPLEMENTATION_ADDRESS = \\\"57\\\";\\n    string internal constant EF_INVALID_RENTAL_TOKEN_IMPLEMENTATION_ADDRESS = \\\"58\\\";\\n\\n    string internal constant EO_INVALID_ENTERPRISE_ADDRESS = \\\"59\\\";\\n\\n    string internal constant ES_INVALID_ESTIMATOR_ADDRESS = \\\"60\\\";\\n    string internal constant ES_INVALID_COLLECTOR_ADDRESS = \\\"61\\\";\\n    string internal constant ES_INVALID_WALLET_ADDRESS = \\\"62\\\";\\n    string internal constant ES_INVALID_CONVERTER_ADDRESS = \\\"63\\\";\\n    string internal constant ES_INVALID_RENTER_ONLY_RETURN_PERIOD = \\\"64\\\";\\n    string internal constant ES_INVALID_ENTERPRISE_ONLY_COLLECTION_PERIOD = \\\"65\\\";\\n    string internal constant ES_STREAMING_RESERVE_HALVING_PERIOD_NOT_GT_0 = \\\"66\\\";\\n    string internal constant ES_MAX_SERVICE_FEE_PERCENT_EXCEEDED = \\\"67\\\";\\n    string internal constant ES_INVALID_BASE_TOKEN_ADDRESS = \\\"68\\\";\\n    string internal constant ES_INVALID_RENTAL_PERIOD_RANGE = \\\"69\\\";\\n    string internal constant ES_SWAPPING_ALREADY_ENABLED = \\\"70\\\";\\n    string internal constant ES_INVALID_PAYMENT_TOKEN_ADDRESS = \\\"71\\\";\\n    string internal constant ES_UNREGISTERED_PAYMENT_TOKEN = \\\"72\\\";\\n\\n    string internal constant IO_INVALID_OWNER_ADDRESS = \\\"73\\\";\\n\\n    string internal constant PT_INSUFFICIENT_AVAILABLE_BALANCE = \\\"74\\\";\\n\\n    string internal constant E_ENTERPRISE_SHUTDOWN = \\\"75\\\";\\n    string internal constant E_INVALID_RENTAL_AMOUNT = \\\"76\\\";\\n    string internal constant ES_INVALID_BONDING_POLE = \\\"77\\\";\\n    string internal constant ES_INVALID_BONDING_SLOPE = \\\"78\\\";\\n    string internal constant ES_TRANSFER_ALREADY_ENABLED = \\\"79\\\";\\n    string internal constant PT_TRANSFER_DISABLED = \\\"80\\\";\\n    string internal constant E_INVALID_ENTERPRISE_NAME = \\\"81\\\";\\n    string internal constant PT_INVALID_MAX_RENTAL_PERIOD = \\\"82\\\";\\n    string internal constant E_INVALID_ENTERPRISE_FACTORY_ADDRESS = \\\"83\\\";\\n}\\n\",\"keccak256\":\"0xdd04680c9dff35e77efb100fd54d707517f6d8cec56e4c7e7c9eded49faf7e20\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101006040523480156200001257600080fd5b50604051620024763803806200247683398101604081905262000035916200019b565b604080518082019091526002815261353560f01b60208201526001600160a01b038516620000815760405162461bcd60e51b8152600401620000789190620001f7565b60405180910390fd5b506040805180820190915260028152611a9b60f11b60208201526001600160a01b038416620000c55760405162461bcd60e51b8152600401620000789190620001f7565b50604080518082019091526002815261353760f01b60208201526001600160a01b038316620001095760405162461bcd60e51b8152600401620000789190620001f7565b5060408051808201909152600281526106a760f31b60208201526001600160a01b0382166200014d5760405162461bcd60e51b8152600401620000789190620001f7565b506001600160601b0319606094851b811660805292841b831660a05290831b821660c05290911b1660e0526200024d565b80516001600160a01b03811681146200019657600080fd5b919050565b60008060008060808587031215620001b1578384fd5b620001bc856200017e565b9350620001cc602086016200017e565b9250620001dc604086016200017e565b9150620001ec606086016200017e565b905092959194509250565b6000602080835283518082850152825b81811015620002255785810183015185820160400152820162000207565b81811115620002375783604083870101525b50601f01601f1916929092016040019392505050565b60805160601c60a05160601c60c05160601c60e05160601c6121ca620002ac600039600081816071015261063a01526000818160ab015261054b015260008181610110015261046d01526000818160e9015261018501526121ca6000f3fe60806040523480156200001157600080fd5b50600436106200006a5760003560e01c806311a7f98c146200006f5780633221a67514620000a957806335ff0aef14620000d057806382f9340914620000e757806383b9a009146200010e578063c31011cc1462000135575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b604051620000a091906200095b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000062000091565b62000091620000e1366004620006eb565b6200014c565b7f000000000000000000000000000000000000000000000000000000000000000062000091565b7f000000000000000000000000000000000000000000000000000000000000000062000091565b6200009162000146366004620006c5565b62000465565b6000806040516200015d9062000660565b604051809103906000f0801580156200017a573d6000803e3d6000fd5b5090506000620001ab7f00000000000000000000000000000000000000000000000000000000000000008362000499565b60405163f2fde38b60e01b81529091506001600160a01b0383169063f2fde38b90620001dc9084906004016200095b565b600060405180830381600087803b158015620001f757600080fd5b505af11580156200020c573d6000803e3d6000fd5b5050604051636815f33760e01b81526001600160a01b0384169250636815f33791506200024c908d908d908c908c908c908c908b903390600401620009b5565b600060405180830381600087803b1580156200026757600080fd5b505af11580156200027c573d6000803e3d6000fd5b50505050600062000307896001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015620002c057600080fd5b505afa158015620002d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620002ff9190810190620007a4565b8385620004f6565b90506000620003908a6001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156200034957600080fd5b505afa1580156200035e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620003889190810190620007a4565b8486620005e5565b60405163ef1f9f3960e01b81526001600160a01b038c81166004830152848116602483015280831660448301529192509084169063ef1f9f3990606401600060405180830381600087803b158015620003e857600080fd5b505af1158015620003fd573d6000803e3d6000fd5b505050505050876001600160a01b0316336001600160a01b03167faf94cde051ff1210197fe31203f2210a396ffd110ab74cf8014d6bfd600842d58c8c8b8b87604051620004509594939291906200096f565b60405180910390a39998505050505050505050565b6000620004937f00000000000000000000000000000000000000000000000000000000000000008362000499565b92915050565b60008282604051620004ab906200066e565b6001600160a01b03928316815291166020820152606060408201819052600090820152608001604051809103906000f080158015620004ee573d6000803e3d6000fd5b509392505050565b600080846040516020016200050c919062000929565b60405160208183030381529060405290506000856040516020016200053291906200090b565b60405160208183030381529060405290506000620005717f00000000000000000000000000000000000000000000000000000000000000008662000499565b6040516303bf912560e11b81529091506001600160a01b0382169063077f224a90620005a690869086908b9060040162000a17565b600060405180830381600087803b158015620005c157600080fd5b505af1158015620005d6573d6000803e3d6000fd5b50929998505050505050505050565b60008084604051602001620005fb9190620008af565b6040516020818303038152906040529050600085604051602001620006219190620008e0565b60405160208183030381529060405290506000620005717f00000000000000000000000000000000000000000000000000000000000000008662000499565b6107b38062000abc83390190565b610f26806200126f83390190565b60008083601f8401126200068e578182fd5b5081356001600160401b03811115620006a5578182fd5b602083019150836020828501011115620006be57600080fd5b9250929050565b600060208284031215620006d7578081fd5b8135620006e48162000aa2565b9392505050565b600080600080600080600060a0888a03121562000706578283fd5b87356001600160401b03808211156200071d578485fd5b6200072b8b838c016200067c565b909950975060208a01359150620007428262000aa2565b9095506040890135908082111562000758578485fd5b50620007678a828b016200067c565b909550935050606088013561ffff8116811462000782578283fd5b91506080880135620007948162000aa2565b8091505092959891949750929550565b600060208284031215620007b6578081fd5b81516001600160401b0380821115620007cd578283fd5b818401915084601f830112620007e1578283fd5b815181811115620007f657620007f662000a8c565b604051601f8201601f19908116603f0116810190838211818310171562000821576200082162000a8c565b816040528281528760208487010111156200083a578586fd5b6200084d83602083016020880162000a59565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600081518084526200089b81602086016020860162000a59565b601f01601f19169290920160200192915050565b6602932b73a30b6160cd1b815260008251620008d381600785016020870162000a59565b9190910160070192915050565b603960f91b815260008251620008fe81600185016020870162000a59565b9190910160010192915050565b607360f81b815260008251620008fe81600185016020870162000a59565b67029ba30b5b4b733960c51b8152600082516200094e81600885016020870162000a59565b9190910160080192915050565b6001600160a01b0391909116815260200190565b6060815260006200098560608301878962000858565b82810360208401526200099a81868862000858565b91505060018060a01b03831660408301529695505050505050565b60c081526000620009cb60c083018a8c62000858565b8281036020840152620009e081898b62000858565b61ffff97909716604084015250506001600160a01b039384166060820152918316608083015290911660a090910152949350505050565b60608152600062000a2c606083018662000881565b828103602084015262000a40818662000881565b91505060018060a01b0383166040830152949350505050565b60005b8381101562000a7657818101518382015260200162000a5c565b8381111562000a86576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811462000ab857600080fd5b5056fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107358061007e6000396000f3fe60806040526004361061006b5760003560e01c8063204e1c7a14610070578063715018a6146100a65780637eff275e146100bd5780638da5cb5b146100dd5780639623609d146100f257806399a88ec414610105578063f2fde38b14610125578063f3b7dead14610145575b600080fd5b34801561007c57600080fd5b5061009061008b3660046104e1565b610165565b60405161009d9190610628565b60405180910390f35b3480156100b257600080fd5b506100bb6101f6565b005b3480156100c957600080fd5b506100bb6100d8366004610520565b61023a565b3480156100e957600080fd5b506100906102cb565b6100bb610100366004610558565b6102da565b34801561011157600080fd5b506100bb610120366004610520565b610370565b34801561013157600080fd5b506100bb6101403660046104e1565b6103cb565b34801561015157600080fd5b506100906101603660046104e1565b61046b565b6000806000836001600160a01b031660405161018b90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101c6576040519150601f19603f3d011682016040523d82523d6000602084013e6101cb565b606091505b5091509150816101da57600080fd5b808060200190518101906101ee9190610504565b949350505050565b336101ff6102cb565b6001600160a01b03161461022e5760405162461bcd60e51b81526004016102259061069f565b60405180910390fd5b6102386000610491565b565b336102436102cb565b6001600160a01b0316146102695760405162461bcd60e51b81526004016102259061069f565b6040516308f2839760e41b81526001600160a01b03831690638f28397090610295908490600401610628565b600060405180830381600087803b1580156102af57600080fd5b505af11580156102c3573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031690565b336102e36102cb565b6001600160a01b0316146103095760405162461bcd60e51b81526004016102259061069f565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610339908690869060040161063c565b6000604051808303818588803b15801561035257600080fd5b505af1158015610366573d6000803e3d6000fd5b5050505050505050565b336103796102cb565b6001600160a01b03161461039f5760405162461bcd60e51b81526004016102259061069f565b604051631b2ce7f360e11b81526001600160a01b03831690633659cfe690610295908490600401610628565b336103d46102cb565b6001600160a01b0316146103fa5760405162461bcd60e51b81526004016102259061069f565b6001600160a01b03811661045f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610225565b61046881610491565b50565b6000806000836001600160a01b031660405161018b906303e1469160e61b815260040190565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104f2578081fd5b81356104fd816106ea565b9392505050565b600060208284031215610515578081fd5b81516104fd816106ea565b60008060408385031215610532578081fd5b823561053d816106ea565b9150602083013561054d816106ea565b809150509250929050565b60008060006060848603121561056c578081fd5b8335610577816106ea565b92506020840135610587816106ea565b915060408401356001600160401b03808211156105a2578283fd5b818601915086601f8301126105b5578283fd5b8135818111156105c7576105c76106d4565b604051601f8201601f19908116603f011681019083821181831017156105ef576105ef6106d4565b81604052828152896020848701011115610607578586fd5b82602086016020830137856020848301015280955050505050509250925092565b6001600160a01b0391909116815260200190565b60018060a01b0383168152600060206040818401528351806040850152825b818110156106775785810183015185820160600152820161065b565b818111156106885783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461046857600080fdfea26469706673582212209a70fb4f2d2e72bc5058e2c38b966484d2bea0c20e8fefb1dae6f24627f57fad64736f6c63430008040033608060405260405162000f2638038062000f268339810160408190526200002691620004da565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd62000609565b60008051602062000edf833981519152146200008157634e487b7160e01b600052600160045260246000fd5b6200008f82826000620000ff565b50620000bf905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610462000609565b60008051602062000ebf83398151915214620000eb57634e487b7160e01b600052600160045260246000fd5b620000f6826200013c565b50505062000672565b6200010a8362000197565b600082511180620001185750805b156200013757620001358383620001d960201b620002601760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200016762000208565b604080516001600160a01b03928316815291841660208301520160405180910390a1620001948162000241565b50565b620001a281620002f6565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606062000201838360405180606001604052806027815260200162000eff6027913962000399565b9392505050565b60006200023260008051602062000ebf83398151915260001b6200047660201b620002081760201c565b546001600160a01b0316919050565b6001600160a01b038116620002ac5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b80620002d560008051602062000ebf83398151915260001b6200047660201b620002081760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6200030c816200047960201b6200028c1760201c565b620003705760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401620002a3565b80620002d560008051602062000edf83398151915260001b6200047660201b620002081760201c565b6060833b620003fa5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401620002a3565b600080856001600160a01b031685604051620004179190620005b6565b600060405180830381855af49150503d806000811462000454576040519150601f19603f3d011682016040523d82523d6000602084013e62000459565b606091505b5090925090506200046c8282866200047f565b9695505050505050565b90565b3b151590565b606083156200049057508162000201565b825115620004a15782518084602001fd5b8160405162461bcd60e51b8152600401620002a39190620005d4565b80516001600160a01b0381168114620004d557600080fd5b919050565b600080600060608486031215620004ef578283fd5b620004fa84620004bd565b92506200050a60208501620004bd565b60408501519092506001600160401b038082111562000527578283fd5b818601915086601f8301126200053b578283fd5b8151818111156200055057620005506200065c565b604051601f8201601f19908116603f011681019083821181831017156200057b576200057b6200065c565b8160405282815289602084870101111562000594578586fd5b620005a78360208301602088016200062d565b80955050505050509250925092565b60008251620005ca8184602087016200062d565b9190910192915050565b6020815260008251806020840152620005f58160408501602087016200062d565b601f01601f19169190910160400192915050565b6000828210156200062857634e487b7160e01b81526011600452602481fd5b500390565b60005b838110156200064a57818101518382015260200162000630565b83811115620001355750506000910152565b634e487b7160e01b600052604160045260246000fd5b61083d80620006826000396000f3fe60806040526004361061004e5760003560e01c80633659cfe6146100655780634f1ef286146100855780635c60da1b146100985780638f283970146100c9578063f851a440146100e95761005d565b3661005d5761005b6100fe565b005b61005b6100fe565b34801561007157600080fd5b5061005b61008036600461068e565b610118565b61005b6100933660046106a8565b61015f565b3480156100a457600080fd5b506100ad6101d0565b6040516001600160a01b03909116815260200160405180910390f35b3480156100d557600080fd5b5061005b6100e436600461068e565b61020b565b3480156100f557600080fd5b506100ad610235565b610106610292565b610116610111610331565b61033b565b565b61012061035f565b6001600160a01b0316336001600160a01b031614156101575761015481604051806020016040528060008152506000610380565b50565b6101546100fe565b61016761035f565b6001600160a01b0316336001600160a01b031614156101c8576101c38383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060019250610380915050565b505050565b6101c36100fe565b60006101da61035f565b6001600160a01b0316336001600160a01b03161415610200576101fb610331565b905090565b6102086100fe565b90565b61021361035f565b6001600160a01b0316336001600160a01b0316141561015757610154816103ab565b600061023f61035f565b6001600160a01b0316336001600160a01b03161415610200576101fb61035f565b606061028583836040518060600160405280602781526020016107e1602791396103ff565b9392505050565b3b151590565b61029a61035f565b6001600160a01b0316336001600160a01b031614156101165760405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b60006101fb6104d3565b3660008037600080366000845af43d6000803e80801561035a573d6000f35b3d6000fd5b60006000805160206107a18339815191525b546001600160a01b0316919050565b610389836104e9565b6000825111806103965750805b156101c3576103a58383610260565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6103d461035f565b604080516001600160a01b03928316815291841660208301520160405180910390a161015481610529565b6060833b61045e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610328565b600080856001600160a01b0316856040516104799190610725565b600060405180830381855af49150503d80600081146104b4576040519150601f19603f3d011682016040523d82523d6000602084013e6104b9565b606091505b50915091506104c98282866105c0565b9695505050505050565b60006000805160206107c1833981519152610371565b6104f2816105f9565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b03811661058e5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608401610328565b806000805160206107a18339815191525b80546001600160a01b0319166001600160a01b039290921691909117905550565b606083156105cf575081610285565b8251156105df5782518084602001fd5b8160405162461bcd60e51b81526004016103289190610741565b803b61065d5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610328565b806000805160206107c183398151915261059f565b80356001600160a01b038116811461068957600080fd5b919050565b60006020828403121561069f578081fd5b61028582610672565b6000806000604084860312156106bc578182fd5b6106c584610672565b925060208401356001600160401b03808211156106e0578384fd5b818601915086601f8301126106f3578384fd5b813581811115610701578485fd5b876020828501011115610712578485fd5b6020830194508093505050509250925092565b60008251610737818460208701610774565b9190910192915050565b6020815260008251806020840152610760816040850160208701610774565b601f01601f19169190910160400192915050565b60005b8381101561078f578181015183820152602001610777565b838111156103a5575050600091015256feb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207fc77031ffac599bbd22f5091b93a9216bc9f8f36e372c488b66cdd684d46de564736f6c63430008040033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212200affe4f5f0277f693f067eaaa3943577153c8bed6df67283b26786059e0858f964736f6c63430008040033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200006a5760003560e01c806311a7f98c146200006f5780633221a67514620000a957806335ff0aef14620000d057806382f9340914620000e757806383b9a009146200010e578063c31011cc1462000135575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b604051620000a091906200095b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000062000091565b62000091620000e1366004620006eb565b6200014c565b7f000000000000000000000000000000000000000000000000000000000000000062000091565b7f000000000000000000000000000000000000000000000000000000000000000062000091565b6200009162000146366004620006c5565b62000465565b6000806040516200015d9062000660565b604051809103906000f0801580156200017a573d6000803e3d6000fd5b5090506000620001ab7f00000000000000000000000000000000000000000000000000000000000000008362000499565b60405163f2fde38b60e01b81529091506001600160a01b0383169063f2fde38b90620001dc9084906004016200095b565b600060405180830381600087803b158015620001f757600080fd5b505af11580156200020c573d6000803e3d6000fd5b5050604051636815f33760e01b81526001600160a01b0384169250636815f33791506200024c908d908d908c908c908c908c908b903390600401620009b5565b600060405180830381600087803b1580156200026757600080fd5b505af11580156200027c573d6000803e3d6000fd5b50505050600062000307896001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015620002c057600080fd5b505afa158015620002d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620002ff9190810190620007a4565b8385620004f6565b90506000620003908a6001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156200034957600080fd5b505afa1580156200035e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620003889190810190620007a4565b8486620005e5565b60405163ef1f9f3960e01b81526001600160a01b038c81166004830152848116602483015280831660448301529192509084169063ef1f9f3990606401600060405180830381600087803b158015620003e857600080fd5b505af1158015620003fd573d6000803e3d6000fd5b505050505050876001600160a01b0316336001600160a01b03167faf94cde051ff1210197fe31203f2210a396ffd110ab74cf8014d6bfd600842d58c8c8b8b87604051620004509594939291906200096f565b60405180910390a39998505050505050505050565b6000620004937f00000000000000000000000000000000000000000000000000000000000000008362000499565b92915050565b60008282604051620004ab906200066e565b6001600160a01b03928316815291166020820152606060408201819052600090820152608001604051809103906000f080158015620004ee573d6000803e3d6000fd5b509392505050565b600080846040516020016200050c919062000929565b60405160208183030381529060405290506000856040516020016200053291906200090b565b60405160208183030381529060405290506000620005717f00000000000000000000000000000000000000000000000000000000000000008662000499565b6040516303bf912560e11b81529091506001600160a01b0382169063077f224a90620005a690869086908b9060040162000a17565b600060405180830381600087803b158015620005c157600080fd5b505af1158015620005d6573d6000803e3d6000fd5b50929998505050505050505050565b60008084604051602001620005fb9190620008af565b6040516020818303038152906040529050600085604051602001620006219190620008e0565b60405160208183030381529060405290506000620005717f00000000000000000000000000000000000000000000000000000000000000008662000499565b6107b38062000abc83390190565b610f26806200126f83390190565b60008083601f8401126200068e578182fd5b5081356001600160401b03811115620006a5578182fd5b602083019150836020828501011115620006be57600080fd5b9250929050565b600060208284031215620006d7578081fd5b8135620006e48162000aa2565b9392505050565b600080600080600080600060a0888a03121562000706578283fd5b87356001600160401b03808211156200071d578485fd5b6200072b8b838c016200067c565b909950975060208a01359150620007428262000aa2565b9095506040890135908082111562000758578485fd5b50620007678a828b016200067c565b909550935050606088013561ffff8116811462000782578283fd5b91506080880135620007948162000aa2565b8091505092959891949750929550565b600060208284031215620007b6578081fd5b81516001600160401b0380821115620007cd578283fd5b818401915084601f830112620007e1578283fd5b815181811115620007f657620007f662000a8c565b604051601f8201601f19908116603f0116810190838211818310171562000821576200082162000a8c565b816040528281528760208487010111156200083a578586fd5b6200084d83602083016020880162000a59565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600081518084526200089b81602086016020860162000a59565b601f01601f19169290920160200192915050565b6602932b73a30b6160cd1b815260008251620008d381600785016020870162000a59565b9190910160070192915050565b603960f91b815260008251620008fe81600185016020870162000a59565b9190910160010192915050565b607360f81b815260008251620008fe81600185016020870162000a59565b67029ba30b5b4b733960c51b8152600082516200094e81600885016020870162000a59565b9190910160080192915050565b6001600160a01b0391909116815260200190565b6060815260006200098560608301878962000858565b82810360208401526200099a81868862000858565b91505060018060a01b03831660408301529695505050505050565b60c081526000620009cb60c083018a8c62000858565b8281036020840152620009e081898b62000858565b61ffff97909716604084015250506001600160a01b039384166060820152918316608083015290911660a090910152949350505050565b60608152600062000a2c606083018662000881565b828103602084015262000a40818662000881565b91505060018060a01b0383166040830152949350505050565b60005b8381101562000a7657818101518382015260200162000a5c565b8381111562000a86576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811462000ab857600080fd5b5056fe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107358061007e6000396000f3fe60806040526004361061006b5760003560e01c8063204e1c7a14610070578063715018a6146100a65780637eff275e146100bd5780638da5cb5b146100dd5780639623609d146100f257806399a88ec414610105578063f2fde38b14610125578063f3b7dead14610145575b600080fd5b34801561007c57600080fd5b5061009061008b3660046104e1565b610165565b60405161009d9190610628565b60405180910390f35b3480156100b257600080fd5b506100bb6101f6565b005b3480156100c957600080fd5b506100bb6100d8366004610520565b61023a565b3480156100e957600080fd5b506100906102cb565b6100bb610100366004610558565b6102da565b34801561011157600080fd5b506100bb610120366004610520565b610370565b34801561013157600080fd5b506100bb6101403660046104e1565b6103cb565b34801561015157600080fd5b506100906101603660046104e1565b61046b565b6000806000836001600160a01b031660405161018b90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101c6576040519150601f19603f3d011682016040523d82523d6000602084013e6101cb565b606091505b5091509150816101da57600080fd5b808060200190518101906101ee9190610504565b949350505050565b336101ff6102cb565b6001600160a01b03161461022e5760405162461bcd60e51b81526004016102259061069f565b60405180910390fd5b6102386000610491565b565b336102436102cb565b6001600160a01b0316146102695760405162461bcd60e51b81526004016102259061069f565b6040516308f2839760e41b81526001600160a01b03831690638f28397090610295908490600401610628565b600060405180830381600087803b1580156102af57600080fd5b505af11580156102c3573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031690565b336102e36102cb565b6001600160a01b0316146103095760405162461bcd60e51b81526004016102259061069f565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610339908690869060040161063c565b6000604051808303818588803b15801561035257600080fd5b505af1158015610366573d6000803e3d6000fd5b5050505050505050565b336103796102cb565b6001600160a01b03161461039f5760405162461bcd60e51b81526004016102259061069f565b604051631b2ce7f360e11b81526001600160a01b03831690633659cfe690610295908490600401610628565b336103d46102cb565b6001600160a01b0316146103fa5760405162461bcd60e51b81526004016102259061069f565b6001600160a01b03811661045f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610225565b61046881610491565b50565b6000806000836001600160a01b031660405161018b906303e1469160e61b815260040190565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104f2578081fd5b81356104fd816106ea565b9392505050565b600060208284031215610515578081fd5b81516104fd816106ea565b60008060408385031215610532578081fd5b823561053d816106ea565b9150602083013561054d816106ea565b809150509250929050565b60008060006060848603121561056c578081fd5b8335610577816106ea565b92506020840135610587816106ea565b915060408401356001600160401b03808211156105a2578283fd5b818601915086601f8301126105b5578283fd5b8135818111156105c7576105c76106d4565b604051601f8201601f19908116603f011681019083821181831017156105ef576105ef6106d4565b81604052828152896020848701011115610607578586fd5b82602086016020830137856020848301015280955050505050509250925092565b6001600160a01b0391909116815260200190565b60018060a01b0383168152600060206040818401528351806040850152825b818110156106775785810183015185820160600152820161065b565b818111156106885783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461046857600080fdfea26469706673582212209a70fb4f2d2e72bc5058e2c38b966484d2bea0c20e8fefb1dae6f24627f57fad64736f6c63430008040033608060405260405162000f2638038062000f268339810160408190526200002691620004da565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd62000609565b60008051602062000edf833981519152146200008157634e487b7160e01b600052600160045260246000fd5b6200008f82826000620000ff565b50620000bf905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610462000609565b60008051602062000ebf83398151915214620000eb57634e487b7160e01b600052600160045260246000fd5b620000f6826200013c565b50505062000672565b6200010a8362000197565b600082511180620001185750805b156200013757620001358383620001d960201b620002601760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200016762000208565b604080516001600160a01b03928316815291841660208301520160405180910390a1620001948162000241565b50565b620001a281620002f6565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606062000201838360405180606001604052806027815260200162000eff6027913962000399565b9392505050565b60006200023260008051602062000ebf83398151915260001b6200047660201b620002081760201c565b546001600160a01b0316919050565b6001600160a01b038116620002ac5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b80620002d560008051602062000ebf83398151915260001b6200047660201b620002081760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6200030c816200047960201b6200028c1760201c565b620003705760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401620002a3565b80620002d560008051602062000edf83398151915260001b6200047660201b620002081760201c565b6060833b620003fa5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401620002a3565b600080856001600160a01b031685604051620004179190620005b6565b600060405180830381855af49150503d806000811462000454576040519150601f19603f3d011682016040523d82523d6000602084013e62000459565b606091505b5090925090506200046c8282866200047f565b9695505050505050565b90565b3b151590565b606083156200049057508162000201565b825115620004a15782518084602001fd5b8160405162461bcd60e51b8152600401620002a39190620005d4565b80516001600160a01b0381168114620004d557600080fd5b919050565b600080600060608486031215620004ef578283fd5b620004fa84620004bd565b92506200050a60208501620004bd565b60408501519092506001600160401b038082111562000527578283fd5b818601915086601f8301126200053b578283fd5b8151818111156200055057620005506200065c565b604051601f8201601f19908116603f011681019083821181831017156200057b576200057b6200065c565b8160405282815289602084870101111562000594578586fd5b620005a78360208301602088016200062d565b80955050505050509250925092565b60008251620005ca8184602087016200062d565b9190910192915050565b6020815260008251806020840152620005f58160408501602087016200062d565b601f01601f19169190910160400192915050565b6000828210156200062857634e487b7160e01b81526011600452602481fd5b500390565b60005b838110156200064a57818101518382015260200162000630565b83811115620001355750506000910152565b634e487b7160e01b600052604160045260246000fd5b61083d80620006826000396000f3fe60806040526004361061004e5760003560e01c80633659cfe6146100655780634f1ef286146100855780635c60da1b146100985780638f283970146100c9578063f851a440146100e95761005d565b3661005d5761005b6100fe565b005b61005b6100fe565b34801561007157600080fd5b5061005b61008036600461068e565b610118565b61005b6100933660046106a8565b61015f565b3480156100a457600080fd5b506100ad6101d0565b6040516001600160a01b03909116815260200160405180910390f35b3480156100d557600080fd5b5061005b6100e436600461068e565b61020b565b3480156100f557600080fd5b506100ad610235565b610106610292565b610116610111610331565b61033b565b565b61012061035f565b6001600160a01b0316336001600160a01b031614156101575761015481604051806020016040528060008152506000610380565b50565b6101546100fe565b61016761035f565b6001600160a01b0316336001600160a01b031614156101c8576101c38383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060019250610380915050565b505050565b6101c36100fe565b60006101da61035f565b6001600160a01b0316336001600160a01b03161415610200576101fb610331565b905090565b6102086100fe565b90565b61021361035f565b6001600160a01b0316336001600160a01b0316141561015757610154816103ab565b600061023f61035f565b6001600160a01b0316336001600160a01b03161415610200576101fb61035f565b606061028583836040518060600160405280602781526020016107e1602791396103ff565b9392505050565b3b151590565b61029a61035f565b6001600160a01b0316336001600160a01b031614156101165760405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b60006101fb6104d3565b3660008037600080366000845af43d6000803e80801561035a573d6000f35b3d6000fd5b60006000805160206107a18339815191525b546001600160a01b0316919050565b610389836104e9565b6000825111806103965750805b156101c3576103a58383610260565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6103d461035f565b604080516001600160a01b03928316815291841660208301520160405180910390a161015481610529565b6060833b61045e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610328565b600080856001600160a01b0316856040516104799190610725565b600060405180830381855af49150503d80600081146104b4576040519150601f19603f3d011682016040523d82523d6000602084013e6104b9565b606091505b50915091506104c98282866105c0565b9695505050505050565b60006000805160206107c1833981519152610371565b6104f2816105f9565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b03811661058e5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608401610328565b806000805160206107a18339815191525b80546001600160a01b0319166001600160a01b039290921691909117905550565b606083156105cf575081610285565b8251156105df5782518084602001fd5b8160405162461bcd60e51b81526004016103289190610741565b803b61065d5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610328565b806000805160206107c183398151915261059f565b80356001600160a01b038116811461068957600080fd5b919050565b60006020828403121561069f578081fd5b61028582610672565b6000806000604084860312156106bc578182fd5b6106c584610672565b925060208401356001600160401b03808211156106e0578384fd5b818601915086601f8301126106f3578384fd5b813581811115610701578485fd5b876020828501011115610712578485fd5b6020830194508093505050509250925092565b60008251610737818460208701610774565b9190910192915050565b6020815260008251806020840152610760816040850160208701610774565b601f01601f19169190910160400192915050565b60005b8381101561078f578181015183820152602001610777565b838111156103a5575050600091015256feb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207fc77031ffac599bbd22f5091b93a9216bc9f8f36e372c488b66cdd684d46de564736f6c63430008040033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212200affe4f5f0277f693f067eaaa3943577153c8bed6df67283b26786059e0858f964736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}